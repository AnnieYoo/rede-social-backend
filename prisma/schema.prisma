// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  avatarUrl String?
  bio       String?
  createdAt DateTime  @default(now())

  posts     Post[]
  comments  Comment[]

  following Follow[] @relation("FollowingRelation")
  followers Follow[] @relation("FollowerRelation")
}

model Post {
  id        String    @id @default(uuid())
  content   String
  imageUrl  String?
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  userId    String

  comments  Comment[]
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  userId    String

  post      Post      @relation(fields: [postId], references: [id])
  postId    String
}

model Follow {
  id          Int      @id @default(autoincrement())
  follower    User     @relation("FollowingRelation", fields: [followerId], references: [id])
  followerId  String
  following   User     @relation("FollowerRelation", fields: [followingId], references: [id])
  followingId String
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
}